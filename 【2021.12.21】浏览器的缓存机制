https://blog.csdn.net/hhthwx/article/details/80152728
对于浏览器的缓存来讲，这些规则是在HTTP协议头部和HTML页面的Meta标签中定义的。他们分别从新鲜度和校验值两个维度来规定浏览器是否可以直接使用缓存中的副本，还是需要去源服务器获取新版本。
过期机制：指的是缓存副本的有效期。一个缓存的副本必须满足以下条件，浏览器会认为它是有效的，足够新的：
        1.含有完整的过期时间控制头信息（HTTP协议报头），并且仍在有效期内
        2.浏览器已经使用过这个缓存的副本，并且会在一个会话中已经检查过新鲜度(即服务器上的资源是否发生改变)
        满足以上两种情况的一种，浏览器会直接从缓存中获取副本进行渲染
    校验值（验证机制）：服务器返回资源的时候有时在控制头信息带上这个资源的实体标签Etag(Entity Tag),它可以用来作为浏览器再次请求过程中的校验标识，如果发现校验标识不匹配，说明资源已经被修改或者过期，浏览器需要重新获取资源内容。
一、http缓存
       http缓存是基于HTTP协议的浏览器文件级缓存机制。即针对文件的重复请求情况下，浏览器可以根据协议头判断从服务器端请求文件还是从本地读取文件，chrome控制台下的Frames即展示的是浏览器的http文件级缓存。以下是浏览器缓存的整个机制流程。主要是针对重复的http请求，在有缓存的情况下判断过程主要分3步：
    ◆判断expires，如果未过期，直接读取http缓存文件，不发http请求，否则进入下一步。
    ◆判断是否含有etag，有则带上if-none-match发送请求，未修改返回304，修改返回200，否则进入下一步。
    ◆判断是否含有last-modified，有则带上if-modified-since发送请求，无效返回200，有效返回304，否则直接向服务器请求。
二、websql(sqlite是websql最普遍而单一的实现)
       websql这种方式只有较新的chrome浏览器支持，并以一个独立规范形式出现，主要有以下特点：
    ◆Web Sql 数据库API 实际上不是HTML5规范的组成部分;
    ◆在HTML5之前就已经存在了，是单独的规范;
    ◆它是将数据以数据库的形式存储在客户端，根据需求去读取;
    ◆跟Storage的区别是： Storage和Cookie都是以键值对的形式存在的;
    ◆Web Sql 更方便于检索，允许sql语句查询;
    ◆让浏览器实现小型数据库存储功能;
    ◆这个数据库是集成在浏览器里面的，目前主流浏览器基本都已支持;

    websql API主要包含三个核心方法：

    ◆openDatabase : 这个方法使用现有数据库或创建新数据库创建数据库对象。
    ◆transaction : 这个方法允许我们根据情况控制事务提交或回滚。
    ◆executeSql : 这个方法用于执行真实的SQL查询。
三、indexDB
      IndexedDB 是一个为了能够在客户端存储可观数量的结构化数据，并且在这些数据上使用索引进行高性能检索的 API。
      虽然 DOM 存储，对于存储少量数据是非常有用的，但是它对大量结构化数据的存储就显得力不从心了。IndexedDB 则提供了这样的一个解决方案。
四、cookie
      Cookie(或者Cookies)，指一般网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据(通常经过加密)。cookie一般通过http请求中在头部一起发送到服务器端。
      一条cookie记录主要由键、值、域、过期时间、大小组成，一般用户保存用户的认证信息。
      不同域名之间的cookie信息是独立的，如果需要设置共享可以在服务器端设置cookie的path和domain来实现共享。
五、localstorage
       localStorage是html5的一种新的本地缓存方案，目前用的比较多，一般用来存储ajax返回的数据，加快下次页面打开时的渲染速度。

        localStorage.setItem(key, value)   //设置记录
        localStorage.getItem(key)          //获取记录
        localStorage.removeItem(key)        //删除该域名下单条记录
        localStorage.clear()               //删除该域名下所有记录

        值得注意的是，localstorage大小有限制，不适合存放过多的数据，如果数据存放超过最大限制会报错，并移除最先保存的数据。
六、sessionstorage
      sessionStorage和localstorage类似，但是浏览器关闭则会全部删除，api和localstorage相同，实际项目中使用较少。
七、application cache
      application cahce是将大部分图片资源、js、css等静态资源放在manifest文件配置中。当页面打开时通过manifest文件来读取本地文件或是请求服务器文件。
       离线访问对基于网络的应用而言越来越重要。虽然所有浏览器都有缓存机制，但它们并不可靠，也不一定总能起到预期的作用。HTML5 使用ApplicationCache 接口可以解决由离线带来的部分难题。
       前提是你需要访问的web页面至少被在线访问过一次。
          注意  在重新加载网页（由用户手动或以编程方式使用 window.location 对象的 reload 方法）之前，网页不会使用已更新的缓存。
        每个指定了 manifest 的页面在用户对其访问时都会被缓存。如果未指定 manifest 属性，则页面不会被缓存（除非在 manifest 文件中直接指定了该页面）。
    manifest 文件的建议的文件扩展名是：".appcache"。